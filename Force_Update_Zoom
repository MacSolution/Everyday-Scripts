#!/bin/zsh

## Conceived by Tim Pearson to update Google Chrome
## Edited by Jos√© Paulo to update Zoom.us - https://github.com/JPAlvim

## Setting variables.

curUser=$(/usr/bin/stat -f%Su /dev/console)

DOWNLOAD_URL="https://zoom.us/client/latest/ZoomInstallerIT.pkg"
PKG_PATH="/tmp/ZoomInstallerIT.pkg"
APP_NAME="zoom.us.app"
APP_PATH="/Applications/$APP_NAME"
APP_PROCESS_NAME="zoom.us"
APP_INFO_PLIST="Contents/Info.plist"
APP_VERSION_KEY="CFBundleVersion"
APP_PERMISSION_USER="root"
APP_PERMISSION_GROUP="wheel"
APP_DIRECTORY="/Applications/zoom.us.app"

## Downloading Zoom.
curl --retry 3 -L "$DOWNLOAD_URL" -o "$PKG_PATH"

## Setting Version to be installed.
TARGET_VERSION=$(pkgutil --expand /tmp/ZoomInstallerIT.pkg  /tmp/pkg; cat /tmp/pkg/Distribution | grep "product version" | sed 's/[<product version="/>]//g'; rm -rf /tmp/pkg)

##Checking if Zoom is installed already.
if [ ! -d "${APP_DIRECTORY}" ]; then
    echo "${APP_DIRECTORY} does not exist!"
    exit 0
fi

## This section creates a comparison between $1 and $2, whose values will be set later.

vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi

    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

INSTALLED_VERSION=`/usr/bin/python <<END
import plistlib
import os
import glob

pl = plistlib.readPlist(os.path.join("${APP_DIRECTORY}", "Contents/Info.plist"))
print pl["CFBundleVersion"]
END`

echo "Current Version: ${INSTALLED_VERSION}"

vercomp ${TARGET_VERSION} ${INSTALLED_VERSION}
COMP=$? # 0 means the same, 1 means TARGET is newer, 2 means INSTALLED is newer
echo "COMPARISON: ${COMP}"

if [ "${COMP}" -eq 1 ]
then
    echo "Installed version is older than ${TARGET_VERSION}."
    echo "Prompting ${curUser} to close Zoom."

    CLOSE_ZOOM="$(sudo launchctl asuser $curUser /usr/bin/osascript -e 'Tell current application to display dialog "Your Zoom is outdated and must be Updated to version '$TARGET_VERSION'. Click Update Now to close Zoom and get its latest release." with title "Zoom Update" with text buttons {"Update Now", "Tomorrow"} default button "Update Now"')"

    if [ "$CLOSE_ZOOM" = "button returned:Update Now" ];
    then
        killall "zoom.us"
        printf "Installing $APP_PROCESS_NAME version %s" "$TARGET_VERSION"
        sudo installer -pkg "$PKG_PATH" -target /
        echo "Zoom installed successfully at version ${TARGET_VERSION}"
        sudo launchctl asuser $curUser /usr/bin/osascript -e 'Tell current application to display dialog "Your Zoom has been successfully updated to version '$TARGET_VERSION'." with title "Success!" with text buttons {"OK"} default button "OK"'
        rm -rf "$PKG_PATH"
        exit 0
    else
        echo "Scheduled for the next day."
        exit 1
    fi
else
    echo "Installed version is the same or newer than the ${TARGET_VERSION}."
    rm -rf "$PKG_PATH"
    exit 1
fi
